<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:p="http://www.springframework.org/schema/p" xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
						http://www.springframework.org/schema/aop 
						http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<tx:annotation-driven />
	<!-- To use this mode="aspectj", it requires adding dependency "spring-aspects" in pom.xml. -->
	<!--
	<tx:annotation-driven mode="aspectj" />
	-->

	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager" p:dataSource-ref="dataSource" />

	<bean id="transactionManager1" class="org.springframework.jdbc.datasource.DataSourceTransactionManager" p:dataSource-ref="dataSource">
		<qualifier value="order" />
	</bean>

	<bean id="transactionManager2" class="org.springframework.jdbc.datasource.DataSourceTransactionManager" p:dataSource-ref="dataSource">
		<qualifier value="account" />
	</bean>

	<bean id="transactionalServiceA" class="com.djs.test.spring_sample.tx.TransactionalServiceA" />
	<bean id="transactionalServiceB" class="com.djs.test.spring_sample.tx.TransactionalServiceB" />

</beans>
