<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.djs.learn</groupId>
	<artifactId>maven_docker_sample</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>maven_docker_test</name>

	<properties>
		<baseimage.name>busybox</baseimage.name>
		<!-- Use an old version for testing. It seems not working for docker-maven-plugin! But it works for maven-resources-plugin. -->
		<baseimage.version>1.28</baseimage.version>
	</properties>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.1.0</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>compile</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<overwrite>true</overwrite>
							<!-- It must be a new folder only for 2nd image. -->
							>
							<outputDirectory>${project.build.directory}/docker2</outputDirectory>
							<resources>
								<resource>
									<directory>${project.basedir}/src/main/docker</directory>
									<includes>
										<include>Dockerfile</include>
									</includes>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<!-- https://github.com/fabric8io/docker-maven-plugin -->
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.28.0</version>
				<configuration>
					<dockerHost>http://192.168.10.17:2375</dockerHost>
					<pushRegistry>docker.djsilenceboy.com:5000</pushRegistry>
					<images>
						<image>
							<name>%a_1:%v</name>
							<build>
							</build>
						</image>
						<image>
							<name>%a_2:%v</name>
							<build>
								<dockerFileDir>${project.build.directory}/docker2</dockerFileDir>
							</build>
						</image>
					</images>
				</configuration>
				<executions>
					<execution>
						<id>start</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>build</goal>
							<goal>push</goal>
						</goals>
					</execution>
					<execution>
						<id>stop</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>remove</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
