<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.djs.learn</groupId>
	<artifactId>maven_docker_sample</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>maven_docker_elk</name>

	<properties>
		<docker.host.ip>192.168.10.17</docker.host.ip>
		<customer.network.name>my-test-elk</customer.network.name>
		<elasticsearch.image.name>my-test-elasticsearch</elasticsearch.image.name>
		<kibana.image.name>my-test-kibana</kibana.image.name>
		<logstash.image.name>my-test-logstash</logstash.image.name>
		<filebeat.image.name>my-test-filebeat</filebeat.image.name>
		<elasticsearch.container.name>${elasticsearch.image.name}-1</elasticsearch.container.name>
		<kibana.container.name>${kibana.image.name}-1</kibana.container.name>
		<logstash.container.name>${logstash.image.name}-1</logstash.container.name>
		<filebeat.container.name>${filebeat.image.name}-1</filebeat.container.name>
	</properties>

	<build>
		<plugins>
			<plugin>
				<!-- https://github.com/fabric8io/docker-maven-plugin -->
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.28.0</version>
				<configuration>
					<dockerHost>http://${docker.host.ip}:2375</dockerHost>
					<pushRegistry>docker.djsilenceboy.com:5000</pushRegistry>
					<autoCreateCustomNetworks>true</autoCreateCustomNetworks>
					<keepContainer>true</keepContainer>
					<keepRunning>true</keepRunning>
					<images>
						<image>
							<name>${elasticsearch.image.name}</name>
							<build>
								<dockerFileDir>Elasticsearch</dockerFileDir>
							</build>
							<run>
								<containerNamePattern>${elasticsearch.container.name}</containerNamePattern>
								<network>
									<mode>custom</mode>
									<name>${customer.network.name}</name>
								</network>
								<ports>
									<port>${elasticsearch.rest.port}:9200</port>
									<port>${elasticsearch.native.port}:9300</port>
								</ports>
								<capAdd>
									<add>IPC_LOCK</add>
								</capAdd>
								<ulimits>
									<ulimit>
										<name>memlock</name>
										<hard>-1</hard>
										<soft>-1</soft>
									</ulimit>
									<ulimit>
										<name>nofile</name>
										<hard>65536</hard>
										<soft>65536</soft>
									</ulimit>
									<ulimit>
										<name>nproc</name>
										<hard>2048</hard>
										<soft>2048</soft>
									</ulimit>
								</ulimits>
							</run>
						</image>
						<image>
							<name>${kibana.image.name}</name>
							<build>
								<dockerFileDir>Kibana</dockerFileDir>
							</build>
							<run>
								<containerNamePattern>${kibana.container.name}</containerNamePattern>
								<env>
									<!-- If Kibana does not join the same customer network of Elasticsearch, it must pass in the IP and port of the host of Elasticsearch container. -->>
									<ELASTICSEARCH_URL>http://${elasticsearch.container.name}:9200</ELASTICSEARCH_URL>
								</env>
								<network>
									<mode>custom</mode>
									<name>${customer.network.name}</name>
								</network>
								<ports>
									<port>5601:5601</port>
								</ports>
								<wait>
									<time>5000</time>
								</wait>
							</run>
						</image>
						<image>
							<name>${logstash.image.name}</name>
							<build>
								<dockerFileDir>Logstash</dockerFileDir>
							</build>
							<run>
								<containerNamePattern>${logstash.container.name}</containerNamePattern>
								<env>
									<!-- If Logstash does not join the same customer network of Elasticsearch, it must pass in the IP and port of the host of Elasticsearch container. -->>
									<ELASTICSEARCH_URL>${elasticsearch.container.name}:9200</ELASTICSEARCH_URL>
								</env>
								<network>
									<mode>custom</mode>
									<name>${customer.network.name}</name>
								</network>
								<ports>
									<port>${logstash.rest.port}:9600</port>
									<port>${logstash.beats.port}:5044</port>
								</ports>
								<wait>
									<time>5000</time>
								</wait>
							</run>
						</image>
						<image>
							<name>${filebeat.image.name}</name>
							<build>
								<dockerFileDir>Filebeat</dockerFileDir>
							</build>
							<run>
								<containerNamePattern>${filebeat.container.name}</containerNamePattern>
								<env>
									<!-- If Filebeat does not join the same customer network of Logstash, it must pass in the IP and port of the host of Logstash container. -->>
									<LOGSTASH_URL>${logstash.container.name}:5044</LOGSTASH_URL>
								</env>
								<network>
									<mode>custom</mode>
									<name>${customer.network.name}</name>
								</network>
								<volumes>
									<bind>
										<volume>/var/log:/host/log:ro</volume>
										<!-- volume>/var/log:/host/log:z</volume -->
									</bind>
								</volumes>
								<wait>
									<time>5000</time>
								</wait>
							</run>
						</image>
					</images>
				</configuration>
				<executions>
					<execution>
						<id>start</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>build</goal>
							<!-- goal>push</goal -->
							<goal>start</goal>
						</goals>
					</execution>
					<execution>
						<id>stop</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
							<!-- goal>remove</goal -->
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
