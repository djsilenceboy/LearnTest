VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  # Use the same SSH key for each VM.
  config.ssh.insert_key = false
  config.vm.box = "centos/7"

  # This message will run when all other completed.
  config.vm.post_up_message = "Test environment for vagrant servers."

  # Use DHCP gateway.
  config.vm.network "public_network", use_dhcp_assigned_default_route: true
  # Not use DHCP IP, will configure IP manually.
  config.vm.network "public_network", auto_config: false

  # This is default folder mapping.
  config.vm.synced_folder "F:/Download/Shared", "/vagrant", owner: "root", group: "root"

  # Install software.
  config.vm.provision "shell", path: "Scripts/Prepare_Yum.sh"
  config.vm.provision "shell", path: "Scripts/Prepare_Python.sh"
  config.vm.provision "shell", path: "Scripts/Prepare_System.sh"

  # Enable password login.
  config.vm.provision "shell", inline: <<-END
    # Testing: sudo sed "/^PasswordAuthentication.*$/d; /^#PasswordAuthentication.*$/a PasswordAuthentication yes" /etc/ssh/sshd_config
    sudo sed -i "/^PasswordAuthentication.*$/d" /etc/ssh/sshd_config
    sudo sed -i "/^#PasswordAuthentication.*$/a PasswordAuthentication yes" /etc/ssh/sshd_config
    sudo systemctl restart sshd
  END


  config.vm.define "vagrantDbServer" do |vagrantDbServer|
    vagrantDbServer.vm.provider "virtualbox" do |vb|
      vb.name = "Vagrant_VagrantDbServer"
      # Default is 1024M.
      vb.memory = 2048
      # Default is 1 CPU.
      vb.cpus = 2
    end

    vagrantDbServer.vm.hostname = "db.djsilenceboy.com"

    # Local provision will run after global provision.
    # Configure IP manually.
    vagrantDbServer.vm.provision "shell", run: "always", inline: "ifconfig eth1 192.168.0.52 netmask 255.255.255.0 up"

    vagrantDbServer.vm.provision "shell", path: "Scripts/Install_PostgreSQL.sh"
    # It requires to config after VM created.
    vagrantDbServer.vm.provision "shell", path: "Scripts/Install_MySQL.sh"
    vagrantDbServer.vm.provision "shell", path: "Scripts/Install_MongoDB.sh"
    # It is not easy to install for Vagrant.
    # vagrantDbServer.vm.provision "shell", path: "Scripts/Install_OracleXE.sh"
  end


  config.vm.define "vagrantApplicationServer" do |vagrantApplicationServer|
    vagrantApplicationServer.vm.provider "virtualbox" do |vb|
      vb.name = "Vagrant_VagrantApplicationServer"
      # Default is 1024M.
      vb.memory = 3072
      # Default is 1 CPU.
      vb.cpus = 2
    end

    vagrantApplicationServer.vm.hostname = "appsvr.djsilenceboy.com"

    # Local provision will run after global provision.
    # Configure IP manually.
    vagrantApplicationServer.vm.provision "shell", run: "always", inline: "ifconfig eth1 192.168.0.53 netmask 255.255.255.0 up"

    vagrantApplicationServer.vm.provision "shell", path: "Scripts/Prepare_Development.sh"
    vagrantApplicationServer.vm.provision "shell", path: "Scripts/Install_Ansible.sh"
    vagrantApplicationServer.vm.provision "shell", path: "Scripts/Install_httpd.sh"
    vagrantApplicationServer.vm.provision "shell", path: "Scripts/Install_Tomcat.sh"
    vagrantApplicationServer.vm.provision "shell", path: "Scripts/Install_Jenkins.sh"
  end


  config.vm.define "vagrantJbossServer" do |vagrantJbossServer|
    vagrantJbossServer.vm.provider "virtualbox" do |vb|
      vb.name = "Vagrant_VagrantJbossServer"
      # Default is 1024M.
      vb.memory = 3072
      # Default is 1 CPU.
      vb.cpus = 2
    end

    vagrantJbossServer.vm.hostname = "jboss.djsilenceboy.com"

    # Local provision will run after global provision.
    # Configure IP manually.
    vagrantJbossServer.vm.provision "shell", run: "always", inline: "ifconfig eth1 192.168.0.54 netmask 255.255.255.0 up"

    vagrantJbossServer.vm.provision "shell", path: "Scripts/Prepare_Development.sh"
    vagrantJbossServer.vm.provision "shell", path: "Scripts/Install_JBossEAP.sh"
  end
end
