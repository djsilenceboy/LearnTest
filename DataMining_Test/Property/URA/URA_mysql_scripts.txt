================================================================================
URA_CONDOEC_TRANS_HIST
------------------------------------------------------------
Find average price for same floor range in same project.

SELECT POSTAL_DISTRICT, PROJECT_NAME, STREET_NAME, PROPERTY_TYPE, SALE_TYPE, TENURE_YEAR, SALE_YEAR, FLOOR_AREA_LOWER, CAST(ROUND(AVG(PRICE)) AS INTEGER) AS PRICE_AVG, COUNT(*) AS TRANSACTIONS
FROM URA_CONDOEC_TRANS_HIST
GROUP BY POSTAL_DISTRICT, PROJECT_NAME, STREET_NAME, PROPERTY_TYPE, SALE_TYPE, TENURE_YEAR, SALE_YEAR, FLOOR_AREA_LOWER
ORDER BY PROJECT_NAME, FLOOR_AREA_LOWER, SALE_YEAR;
================================================================================
URA_CONDOEC_RENT_HIST
------------------------------------------------------------
Find average yearly rental for same floor range in same project.

SELECT POSTAL_DISTRICT, PROJECT_NAME, STREET_NAME, PROPERTY_TYPE, LEASE_YEAR, FLOOR_AREA_LOWER, CAST(ROUND(AVG(MONTHLY_RENT)) AS INTEGER) AS MONTHLY_RENT_AVG, CAST(ROUND(AVG(YEARLY_RENT)) AS INTEGER) AS YEARLY_RENT_AVG, COUNT(*) AS TRANSACTIONS
FROM URA_CONDOEC_RENT_HIST
GROUP BY POSTAL_DISTRICT, PROJECT_NAME, STREET_NAME, PROPERTY_TYPE, LEASE_YEAR, FLOOR_AREA_LOWER
ORDER BY PROJECT_NAME, FLOOR_AREA_LOWER, LEASE_YEAR;
================================================================================
URA_CONDOEC_TRANS_HIST
URA_CONDOEC_RENT_HIST
------------------------------------------------------------
Find projects with Price-to-Rent Ratio (Sale first).

SELECT a.POSTAL_DISTRICT, a.PROJECT_NAME, a.SALE_YEAR, a.FLOOR_AREA_LOWER, a.TRANSACTIONS AS SALE_TRANSACTIONS, a.PRICE_AVG, b.TRANSACTIONS AS RENT_TRANSACTIONS, b.YEARLY_RENT_AVG, CAST(ROUND(a.PRICE_AVG / b.YEARLY_RENT_AVG) AS INTEGER) AS PRICE_RENT_RATIO
FROM
  (SELECT POSTAL_DISTRICT, PROJECT_NAME, SALE_YEAR, FLOOR_AREA_LOWER, CAST(ROUND(AVG(PRICE)) AS INTEGER) AS PRICE_AVG, COUNT(*) AS TRANSACTIONS
   FROM URA_CONDOEC_TRANS_HIST
   GROUP BY POSTAL_DISTRICT, PROJECT_NAME, SALE_YEAR, FLOOR_AREA_LOWER) a
  LEFT JOIN
  (SELECT POSTAL_DISTRICT, PROJECT_NAME, LEASE_YEAR, FLOOR_AREA_LOWER, CAST(ROUND(AVG(YEARLY_RENT)) AS INTEGER) AS YEARLY_RENT_AVG, COUNT(*) AS TRANSACTIONS
   FROM URA_CONDOEC_RENT_HIST
   GROUP BY POSTAL_DISTRICT, PROJECT_NAME, LEASE_YEAR, FLOOR_AREA_LOWER) b
  ON ((a.POSTAL_DISTRICT = b.POSTAL_DISTRICT)
      AND (a.PROJECT_NAME = b.PROJECT_NAME)
      AND (a.SALE_YEAR = b.LEASE_YEAR)
      AND (a.FLOOR_AREA_LOWER = b.FLOOR_AREA_LOWER))
ORDER BY a.PROJECT_NAME, a.FLOOR_AREA_LOWER, a.SALE_YEAR;
------------------------------------------------------------
Find projects with Price-to-Rent Ratio (Rent first).

SELECT a.POSTAL_DISTRICT, a.PROJECT_NAME, a.LEASE_YEAR, a.FLOOR_AREA_LOWER, b.TRANSACTIONS AS SALE_TRANSACTIONS, b.PRICE_AVG, a.TRANSACTIONS AS RENT_TRANSACTIONS, a.YEARLY_RENT_AVG, CAST(ROUND(b.PRICE_AVG / a.YEARLY_RENT_AVG) AS INTEGER) AS PRICE_RENT_RATIO
FROM
  (SELECT POSTAL_DISTRICT, PROJECT_NAME, LEASE_YEAR, FLOOR_AREA_LOWER, CAST(ROUND(AVG(YEARLY_RENT)) AS INTEGER) AS YEARLY_RENT_AVG, COUNT(*) AS TRANSACTIONS
   FROM URA_CONDOEC_RENT_HIST
   GROUP BY POSTAL_DISTRICT, PROJECT_NAME, LEASE_YEAR, FLOOR_AREA_LOWER) a
  LEFT JOIN
  (SELECT POSTAL_DISTRICT, PROJECT_NAME, SALE_YEAR, FLOOR_AREA_LOWER, CAST(ROUND(AVG(PRICE)) AS INTEGER) AS PRICE_AVG, COUNT(*) AS TRANSACTIONS
   FROM URA_CONDOEC_TRANS_HIST
   GROUP BY POSTAL_DISTRICT, PROJECT_NAME, SALE_YEAR, FLOOR_AREA_LOWER) b
  ON ((a.POSTAL_DISTRICT = b.POSTAL_DISTRICT)
      AND (a.PROJECT_NAME = b.PROJECT_NAME)
      AND (a.LEASE_YEAR = b.SALE_YEAR)
      AND (a.FLOOR_AREA_LOWER = b.FLOOR_AREA_LOWER))
ORDER BY a.PROJECT_NAME, a.FLOOR_AREA_LOWER, a.LEASE_YEAR;
------------------------------------------------------------
Find projects with Price-to-Rent Ratio (Union of Sale first and Rent first).

SELECT POSTAL_DISTRICT, PROJECT_NAME, TRANSACTION_YEAR, FLOOR_AREA_LOWER, SALE_TRANSACTIONS, PRICE_AVG, RENT_TRANSACTIONS, YEARLY_RENT_AVG, PRICE_RENT_RATIO
FROM (
SELECT a.POSTAL_DISTRICT, a.PROJECT_NAME, a.LEASE_YEAR AS TRANSACTION_YEAR, a.FLOOR_AREA_LOWER, b.TRANSACTIONS AS SALE_TRANSACTIONS, b.PRICE_AVG, a.TRANSACTIONS AS RENT_TRANSACTIONS, a.YEARLY_RENT_AVG, CAST(ROUND(b.PRICE_AVG / a.YEARLY_RENT_AVG) AS INTEGER) AS PRICE_RENT_RATIO
FROM
  (SELECT POSTAL_DISTRICT, PROJECT_NAME, LEASE_YEAR, FLOOR_AREA_LOWER, CAST(ROUND(AVG(YEARLY_RENT)) AS INTEGER) AS YEARLY_RENT_AVG, COUNT(*) AS TRANSACTIONS
   FROM URA_CONDOEC_RENT_HIST
   GROUP BY POSTAL_DISTRICT, PROJECT_NAME, LEASE_YEAR, FLOOR_AREA_LOWER) a
  LEFT JOIN
  (SELECT POSTAL_DISTRICT, PROJECT_NAME, SALE_YEAR, FLOOR_AREA_LOWER, CAST(ROUND(AVG(PRICE)) AS INTEGER) AS PRICE_AVG, COUNT(*) AS TRANSACTIONS
   FROM URA_CONDOEC_TRANS_HIST
   GROUP BY POSTAL_DISTRICT, PROJECT_NAME, SALE_YEAR, FLOOR_AREA_LOWER) b
  ON ((a.POSTAL_DISTRICT = b.POSTAL_DISTRICT)
      AND (a.PROJECT_NAME = b.PROJECT_NAME)
      AND (a.LEASE_YEAR = b.SALE_YEAR)
      AND (a.FLOOR_AREA_LOWER = b.FLOOR_AREA_LOWER))
UNION
SELECT a.POSTAL_DISTRICT, a.PROJECT_NAME, a.SALE_YEAR AS TRANSACTION_YEAR, a.FLOOR_AREA_LOWER, a.TRANSACTIONS AS SALE_TRANSACTIONS, a.PRICE_AVG, b.TRANSACTIONS AS RENT_TRANSACTIONS, b.YEARLY_RENT_AVG, CAST(ROUND(a.PRICE_AVG / b.YEARLY_RENT_AVG) AS INTEGER) AS PRICE_RENT_RATIO
FROM
  (SELECT POSTAL_DISTRICT, PROJECT_NAME, SALE_YEAR, FLOOR_AREA_LOWER, CAST(ROUND(AVG(PRICE)) AS INTEGER) AS PRICE_AVG, COUNT(*) AS TRANSACTIONS
   FROM URA_CONDOEC_TRANS_HIST
   GROUP BY POSTAL_DISTRICT, PROJECT_NAME, SALE_YEAR, FLOOR_AREA_LOWER) a
  LEFT JOIN
  (SELECT POSTAL_DISTRICT, PROJECT_NAME, LEASE_YEAR, FLOOR_AREA_LOWER, CAST(ROUND(AVG(YEARLY_RENT)) AS INTEGER) AS YEARLY_RENT_AVG, COUNT(*) AS TRANSACTIONS
   FROM URA_CONDOEC_RENT_HIST
   GROUP BY POSTAL_DISTRICT, PROJECT_NAME, LEASE_YEAR, FLOOR_AREA_LOWER) b
  ON ((a.POSTAL_DISTRICT = b.POSTAL_DISTRICT)
      AND (a.PROJECT_NAME = b.PROJECT_NAME)
      AND (a.SALE_YEAR = b.LEASE_YEAR)
      AND (a.FLOOR_AREA_LOWER = b.FLOOR_AREA_LOWER))
)
ORDER BY PROJECT_NAME, FLOOR_AREA_LOWER, TRANSACTION_YEAR;
------------------------------------------------------------
Find projects with Price-to-Rent Ratio (All years).

SELECT POSTAL_DISTRICT, PROJECT_NAME, FLOOR_AREA_LOWER, SALE_TRANSACTIONS, PRICE_AVG, RENT_TRANSACTIONS, YEARLY_RENT_AVG, PRICE_RENT_RATIO
FROM (
SELECT a.POSTAL_DISTRICT, a.PROJECT_NAME, a.FLOOR_AREA_LOWER, a.TRANSACTIONS AS SALE_TRANSACTIONS, a.PRICE_AVG, b.TRANSACTIONS AS RENT_TRANSACTIONS, b.YEARLY_RENT_AVG, CAST(ROUND(a.PRICE_AVG / b.YEARLY_RENT_AVG) AS INTEGER) AS PRICE_RENT_RATIO
FROM
  (SELECT POSTAL_DISTRICT, PROJECT_NAME, FLOOR_AREA_LOWER, CAST(ROUND(AVG(PRICE)) AS INTEGER) AS PRICE_AVG, COUNT(*) AS TRANSACTIONS
   FROM URA_CONDOEC_TRANS_HIST
   GROUP BY POSTAL_DISTRICT, PROJECT_NAME, FLOOR_AREA_LOWER) a
  LEFT JOIN
  (SELECT POSTAL_DISTRICT, PROJECT_NAME, FLOOR_AREA_LOWER, CAST(ROUND(AVG(YEARLY_RENT)) AS INTEGER) AS YEARLY_RENT_AVG, COUNT(*) AS TRANSACTIONS
   FROM URA_CONDOEC_RENT_HIST
   GROUP BY POSTAL_DISTRICT, PROJECT_NAME, FLOOR_AREA_LOWER) b
  ON ((a.POSTAL_DISTRICT = b.POSTAL_DISTRICT)
      AND (a.PROJECT_NAME = b.PROJECT_NAME)
      AND (a.FLOOR_AREA_LOWER = b.FLOOR_AREA_LOWER))
UNION
SELECT a.POSTAL_DISTRICT, a.PROJECT_NAME, a.FLOOR_AREA_LOWER, b.TRANSACTIONS AS SALE_TRANSACTIONS, b.PRICE_AVG, a.TRANSACTIONS AS RENT_TRANSACTIONS, a.YEARLY_RENT_AVG, CAST(ROUND(b.PRICE_AVG / a.YEARLY_RENT_AVG) AS INTEGER) AS PRICE_RENT_RATIO
FROM
  (SELECT POSTAL_DISTRICT, PROJECT_NAME, FLOOR_AREA_LOWER, CAST(ROUND(AVG(YEARLY_RENT)) AS INTEGER) AS YEARLY_RENT_AVG, COUNT(*) AS TRANSACTIONS
   FROM URA_CONDOEC_RENT_HIST
   GROUP BY POSTAL_DISTRICT, PROJECT_NAME, FLOOR_AREA_LOWER) a
  LEFT JOIN
  (SELECT POSTAL_DISTRICT, PROJECT_NAME, FLOOR_AREA_LOWER, CAST(ROUND(AVG(PRICE)) AS INTEGER) AS PRICE_AVG, COUNT(*) AS TRANSACTIONS
   FROM URA_CONDOEC_TRANS_HIST
   GROUP BY POSTAL_DISTRICT, PROJECT_NAME, FLOOR_AREA_LOWER) b
  ON ((a.POSTAL_DISTRICT = b.POSTAL_DISTRICT)
      AND (a.PROJECT_NAME = b.PROJECT_NAME)
      AND (a.FLOOR_AREA_LOWER = b.FLOOR_AREA_LOWER))
)
ORDER BY PROJECT_NAME, FLOOR_AREA_LOWER;
================================================================================
URA_CONDOEC_TRANS_HIST
------------------------------------------------------------
Find
1. transactions and min/avg/max price for each project.
2. transactions and min/avg/max price for each project, which
   SALE_YEAR is >= 2019,
   SALE_YEAR is >= 2020,
   SALE_YEAR is >= 2021,
   SALE_YEAR is >= 2022,
   SALE_YEAR is >= 2023,
   SALE_YEAR is >= 2024.

SELECT a.POSTAL_DISTRICT, a.PROJECT_NAME, a.PROPERTY_TYPE, a.TENURE_YEAR, a.FLOOR_AREA,
  a.TRANSACTIONS AS ALL_TRANS, a.MIN_PRICE AS ALL_MIN, a.AVG_PRICE AS ALL_AVG, a.MAX_PRICE AS ALL_MAX,
  g.TRANSACTIONS AS F2024_TRANS, g.AVG_PRICE AS F2024_AVG,
  f.TRANSACTIONS AS F2023_TRANS, f.AVG_PRICE AS F2023_AVG,
  e.TRANSACTIONS AS F2022_TRANS, e.AVG_PRICE AS F2022_AVG,
  d.TRANSACTIONS AS F2021_TRANS, d.AVG_PRICE AS F2021_AVG,
  c.TRANSACTIONS AS F2020_TRANS, c.AVG_PRICE AS F2020_AVG,
  b.TRANSACTIONS AS F2019_TRANS, b.AVG_PRICE AS F2019_AVG,
  g.MIN_PRICE AS F2024_MIN, g.MAX_PRICE AS F2024_MAX,
  f.MIN_PRICE AS F2023_MIN, f.MAX_PRICE AS F2023_MAX,
  e.MIN_PRICE AS F2022_MIN, e.MAX_PRICE AS F2022_MAX,
  d.MIN_PRICE AS F2021_MIN, d.MAX_PRICE AS F2021_MAX,
  c.MIN_PRICE AS F2020_MIN, c.MAX_PRICE AS F2020_MAX,
  b.MIN_PRICE AS F2019_MIN, b.MAX_PRICE AS F2019_MAX
FROM
  (SELECT POSTAL_DISTRICT, PROJECT_NAME, PROPERTY_TYPE, TENURE_YEAR, FLOOR_AREA, COUNT(*) AS TRANSACTIONS, MIN(PRICE) AS MIN_PRICE, CAST(ROUND(AVG(PRICE)) AS INTEGER) AS AVG_PRICE, MAX(PRICE) AS MAX_PRICE
   FROM URA_CONDOEC_TRANS_HIST
   GROUP BY POSTAL_DISTRICT, PROJECT_NAME, PROPERTY_TYPE, TENURE_YEAR, FLOOR_AREA) a
  LEFT JOIN
  (SELECT POSTAL_DISTRICT, PROJECT_NAME, PROPERTY_TYPE, TENURE_YEAR, FLOOR_AREA, COUNT(*) AS TRANSACTIONS, MIN(PRICE) AS MIN_PRICE, CAST(ROUND(AVG(PRICE)) AS INTEGER) AS AVG_PRICE, MAX(PRICE) AS MAX_PRICE
   FROM URA_CONDOEC_TRANS_HIST
   WHERE (SALE_YEAR >= 2019)
   GROUP BY POSTAL_DISTRICT, PROJECT_NAME, PROPERTY_TYPE, TENURE_YEAR, FLOOR_AREA) b
  ON ((a.POSTAL_DISTRICT = b.POSTAL_DISTRICT)
      AND (a.PROJECT_NAME = b.PROJECT_NAME)
      AND (a.PROPERTY_TYPE = b.PROPERTY_TYPE)
      AND (a.TENURE_YEAR = b.TENURE_YEAR)
      AND (a.FLOOR_AREA = b.FLOOR_AREA))
  LEFT JOIN
  (SELECT POSTAL_DISTRICT, PROJECT_NAME, PROPERTY_TYPE, TENURE_YEAR, FLOOR_AREA, COUNT(*) AS TRANSACTIONS, MIN(PRICE) AS MIN_PRICE, CAST(ROUND(AVG(PRICE)) AS INTEGER) AS AVG_PRICE, MAX(PRICE) AS MAX_PRICE
   FROM URA_CONDOEC_TRANS_HIST
   WHERE (SALE_YEAR >= 2020)
   GROUP BY POSTAL_DISTRICT, PROJECT_NAME, PROPERTY_TYPE, TENURE_YEAR, FLOOR_AREA) c
  ON ((a.POSTAL_DISTRICT = c.POSTAL_DISTRICT)
      AND (a.PROJECT_NAME = c.PROJECT_NAME)
      AND (a.PROPERTY_TYPE = c.PROPERTY_TYPE)
      AND (a.TENURE_YEAR = c.TENURE_YEAR)
      AND (a.FLOOR_AREA = c.FLOOR_AREA))
  LEFT JOIN
  (SELECT POSTAL_DISTRICT, PROJECT_NAME, PROPERTY_TYPE, TENURE_YEAR, FLOOR_AREA, COUNT(*) AS TRANSACTIONS, MIN(PRICE) AS MIN_PRICE, CAST(ROUND(AVG(PRICE)) AS INTEGER) AS AVG_PRICE, MAX(PRICE) AS MAX_PRICE
   FROM URA_CONDOEC_TRANS_HIST
   WHERE (SALE_YEAR >= 2021)
   GROUP BY POSTAL_DISTRICT, PROJECT_NAME, PROPERTY_TYPE, TENURE_YEAR, FLOOR_AREA) d
  ON ((a.POSTAL_DISTRICT = d.POSTAL_DISTRICT)
      AND (a.PROJECT_NAME = d.PROJECT_NAME)
      AND (a.PROPERTY_TYPE = d.PROPERTY_TYPE)
      AND (a.TENURE_YEAR = d.TENURE_YEAR)
      AND (a.FLOOR_AREA = d.FLOOR_AREA))
  LEFT JOIN
  (SELECT POSTAL_DISTRICT, PROJECT_NAME, PROPERTY_TYPE, TENURE_YEAR, FLOOR_AREA, COUNT(*) AS TRANSACTIONS, MIN(PRICE) AS MIN_PRICE, CAST(ROUND(AVG(PRICE)) AS INTEGER) AS AVG_PRICE, MAX(PRICE) AS MAX_PRICE
   FROM URA_CONDOEC_TRANS_HIST
   WHERE (SALE_YEAR >= 2022)
   GROUP BY POSTAL_DISTRICT, PROJECT_NAME, PROPERTY_TYPE, TENURE_YEAR, FLOOR_AREA) e
  ON ((a.POSTAL_DISTRICT = e.POSTAL_DISTRICT)
      AND (a.PROJECT_NAME = e.PROJECT_NAME)
      AND (a.PROPERTY_TYPE = e.PROPERTY_TYPE)
      AND (a.TENURE_YEAR = e.TENURE_YEAR)
      AND (a.FLOOR_AREA = e.FLOOR_AREA))
  LEFT JOIN
  (SELECT POSTAL_DISTRICT, PROJECT_NAME, PROPERTY_TYPE, TENURE_YEAR, FLOOR_AREA, COUNT(*) AS TRANSACTIONS, MIN(PRICE) AS MIN_PRICE, CAST(ROUND(AVG(PRICE)) AS INTEGER) AS AVG_PRICE, MAX(PRICE) AS MAX_PRICE
   FROM URA_CONDOEC_TRANS_HIST
   WHERE (SALE_YEAR >= 2023)
   GROUP BY POSTAL_DISTRICT, PROJECT_NAME, PROPERTY_TYPE, TENURE_YEAR, FLOOR_AREA) f
  ON ((a.POSTAL_DISTRICT = f.POSTAL_DISTRICT)
      AND (a.PROJECT_NAME = f.PROJECT_NAME)
      AND (a.PROPERTY_TYPE = f.PROPERTY_TYPE)
      AND (a.TENURE_YEAR = f.TENURE_YEAR)
      AND (a.FLOOR_AREA = f.FLOOR_AREA))
  LEFT JOIN
  (SELECT POSTAL_DISTRICT, PROJECT_NAME, PROPERTY_TYPE, TENURE_YEAR, FLOOR_AREA, COUNT(*) AS TRANSACTIONS, MIN(PRICE) AS MIN_PRICE, CAST(ROUND(AVG(PRICE)) AS INTEGER) AS AVG_PRICE, MAX(PRICE) AS MAX_PRICE
   FROM URA_CONDOEC_TRANS_HIST
   WHERE (SALE_YEAR >= 2024)
   GROUP BY POSTAL_DISTRICT, PROJECT_NAME, PROPERTY_TYPE, TENURE_YEAR, FLOOR_AREA) g
  ON ((a.POSTAL_DISTRICT = g.POSTAL_DISTRICT)
      AND (a.PROJECT_NAME = g.PROJECT_NAME)
      AND (a.PROPERTY_TYPE = g.PROPERTY_TYPE)
      AND (a.TENURE_YEAR = g.TENURE_YEAR)
      AND (a.FLOOR_AREA = g.FLOOR_AREA))
ORDER BY a.PROJECT_NAME, a.FLOOR_AREA;
================================================================================
URA_CONDOEC_TRANS_HIST
------------------------------------------------------------
Find
1. Price 2024 = Price 2019 * 104.9% * 104.9% * 104.9% * 104.9% * 104.9% = Price 2019 * 127%
   Price 2024 = Price 2020 * 104.9% * 104.9% * 104.9% * 104.9% = Price 2020 * 121%
2. Price 2023 = Price 2019 * 104.9% * 104.9% * 104.9% * 104.9% = Price 2019 * 121%
   Price 2023 = Price 2020 * 104.9% * 104.9% * 104.9% = Price 2020 * 116%

SELECT a.POSTAL_DISTRICT, a.PROJECT_NAME, a.PROPERTY_TYPE, a.TENURE_YEAR, a.FLOOR_AREA,
  a.TRANSACTIONS AS ALL_TRANS, a.AVG_PRICE AS ALL_AVG,
  g.TRANSACTIONS AS F2024_TRANS, g.AVG_PRICE AS F2024_AVG,
  CAST(ROUND(g.AVG_PRICE * 100.0 / c.AVG_PRICE - 100) AS INTEGER) AS PERCENT_2024_2020, CAST(ROUND(b.AVG_PRICE * 1.21) AS INTEGER) AS PREDICT_2024_2020,
  CAST(ROUND(g.AVG_PRICE * 100.0 / b.AVG_PRICE - 100) AS INTEGER) AS PERCENT_2024_2019, CAST(ROUND(b.AVG_PRICE * 1.27) AS INTEGER) AS PREDICT_2024_2019,
  f.TRANSACTIONS AS F2023_TRANS, f.AVG_PRICE AS F2023_AVG,
  CAST(ROUND(f.AVG_PRICE * 100.0 / c.AVG_PRICE - 100) AS INTEGER) AS PERCENT_2023_2020, CAST(ROUND(b.AVG_PRICE * 1.21) AS INTEGER) AS PREDICT_2023_2020,
  CAST(ROUND(f.AVG_PRICE * 100.0 / b.AVG_PRICE - 100) AS INTEGER) AS PERCENT_2023_2019, CAST(ROUND(b.AVG_PRICE * 1.16) AS INTEGER) AS PREDICT_2023_2019,
  e.TRANSACTIONS AS F2022_TRANS, e.AVG_PRICE AS F2022_AVG,
  d.TRANSACTIONS AS F2021_TRANS, d.AVG_PRICE AS F2021_AVG,
  c.TRANSACTIONS AS F2020_TRANS, c.AVG_PRICE AS F2020_AVG,
  b.TRANSACTIONS AS F2019_TRANS, b.AVG_PRICE AS F2019_AVG
FROM
  (SELECT POSTAL_DISTRICT, PROJECT_NAME, PROPERTY_TYPE, TENURE_YEAR, FLOOR_AREA, COUNT(*) AS TRANSACTIONS, CAST(ROUND(AVG(PRICE)) AS INTEGER) AS AVG_PRICE
   FROM URA_CONDOEC_TRANS_HIST
   GROUP BY POSTAL_DISTRICT, PROJECT_NAME, PROPERTY_TYPE, TENURE_YEAR, FLOOR_AREA) a
  LEFT JOIN
  (SELECT POSTAL_DISTRICT, PROJECT_NAME, PROPERTY_TYPE, TENURE_YEAR, FLOOR_AREA, COUNT(*) AS TRANSACTIONS, CAST(ROUND(AVG(PRICE)) AS INTEGER) AS AVG_PRICE
   FROM URA_CONDOEC_TRANS_HIST
   WHERE (SALE_YEAR = 2019)
   GROUP BY POSTAL_DISTRICT, PROJECT_NAME, PROPERTY_TYPE, TENURE_YEAR, FLOOR_AREA) b
  ON ((a.POSTAL_DISTRICT = b.POSTAL_DISTRICT)
      AND (a.PROJECT_NAME = b.PROJECT_NAME)
      AND (a.PROPERTY_TYPE = b.PROPERTY_TYPE)
      AND (a.TENURE_YEAR = b.TENURE_YEAR)
      AND (a.FLOOR_AREA = b.FLOOR_AREA))
  LEFT JOIN
  (SELECT POSTAL_DISTRICT, PROJECT_NAME, PROPERTY_TYPE, TENURE_YEAR, FLOOR_AREA, COUNT(*) AS TRANSACTIONS, CAST(ROUND(AVG(PRICE)) AS INTEGER) AS AVG_PRICE
   FROM URA_CONDOEC_TRANS_HIST
   WHERE (SALE_YEAR = 2020)
   GROUP BY POSTAL_DISTRICT, PROJECT_NAME, PROPERTY_TYPE, TENURE_YEAR, FLOOR_AREA) c
  ON ((a.POSTAL_DISTRICT = c.POSTAL_DISTRICT)
      AND (a.PROJECT_NAME = c.PROJECT_NAME)
      AND (a.PROPERTY_TYPE = c.PROPERTY_TYPE)
      AND (a.TENURE_YEAR = c.TENURE_YEAR)
      AND (a.FLOOR_AREA = c.FLOOR_AREA))
  LEFT JOIN
  (SELECT POSTAL_DISTRICT, PROJECT_NAME, PROPERTY_TYPE, TENURE_YEAR, FLOOR_AREA, COUNT(*) AS TRANSACTIONS, CAST(ROUND(AVG(PRICE)) AS INTEGER) AS AVG_PRICE
   FROM URA_CONDOEC_TRANS_HIST
   WHERE (SALE_YEAR = 2021)
   GROUP BY POSTAL_DISTRICT, PROJECT_NAME, PROPERTY_TYPE, TENURE_YEAR, FLOOR_AREA) d
  ON ((a.POSTAL_DISTRICT = d.POSTAL_DISTRICT)
      AND (a.PROJECT_NAME = d.PROJECT_NAME)
      AND (a.PROPERTY_TYPE = d.PROPERTY_TYPE)
      AND (a.TENURE_YEAR = d.TENURE_YEAR)
      AND (a.FLOOR_AREA = d.FLOOR_AREA))
  LEFT JOIN
  (SELECT POSTAL_DISTRICT, PROJECT_NAME, PROPERTY_TYPE, TENURE_YEAR, FLOOR_AREA, COUNT(*) AS TRANSACTIONS, CAST(ROUND(AVG(PRICE)) AS INTEGER) AS AVG_PRICE
   FROM URA_CONDOEC_TRANS_HIST
   WHERE (SALE_YEAR = 2022)
   GROUP BY POSTAL_DISTRICT, PROJECT_NAME, PROPERTY_TYPE, TENURE_YEAR, FLOOR_AREA) e
  ON ((a.POSTAL_DISTRICT = e.POSTAL_DISTRICT)
      AND (a.PROJECT_NAME = e.PROJECT_NAME)
      AND (a.PROPERTY_TYPE = e.PROPERTY_TYPE)
      AND (a.TENURE_YEAR = e.TENURE_YEAR)
      AND (a.FLOOR_AREA = e.FLOOR_AREA))
  LEFT JOIN
  (SELECT POSTAL_DISTRICT, PROJECT_NAME, PROPERTY_TYPE, TENURE_YEAR, FLOOR_AREA, COUNT(*) AS TRANSACTIONS, CAST(ROUND(AVG(PRICE)) AS INTEGER) AS AVG_PRICE
   FROM URA_CONDOEC_TRANS_HIST
   WHERE (SALE_YEAR = 2023)
   GROUP BY POSTAL_DISTRICT, PROJECT_NAME, PROPERTY_TYPE, TENURE_YEAR, FLOOR_AREA) f
  ON ((a.POSTAL_DISTRICT = f.POSTAL_DISTRICT)
      AND (a.PROJECT_NAME = f.PROJECT_NAME)
      AND (a.PROPERTY_TYPE = f.PROPERTY_TYPE)
      AND (a.TENURE_YEAR = f.TENURE_YEAR)
      AND (a.FLOOR_AREA = f.FLOOR_AREA))
  LEFT JOIN
  (SELECT POSTAL_DISTRICT, PROJECT_NAME, PROPERTY_TYPE, TENURE_YEAR, FLOOR_AREA, COUNT(*) AS TRANSACTIONS, CAST(ROUND(AVG(PRICE)) AS INTEGER) AS AVG_PRICE
   FROM URA_CONDOEC_TRANS_HIST
   WHERE (SALE_YEAR = 2024)
   GROUP BY POSTAL_DISTRICT, PROJECT_NAME, PROPERTY_TYPE, TENURE_YEAR, FLOOR_AREA) g
  ON ((a.POSTAL_DISTRICT = g.POSTAL_DISTRICT)
      AND (a.PROJECT_NAME = g.PROJECT_NAME)
      AND (a.PROPERTY_TYPE = g.PROPERTY_TYPE)
      AND (a.TENURE_YEAR = g.TENURE_YEAR)
      AND (a.FLOOR_AREA = g.FLOOR_AREA))
ORDER BY a.PROJECT_NAME, a.FLOOR_AREA;
================================================================================

================================================================================
<Deprecated>
URA_CONDOEC_TRANS_HIST
------------------------------------------------------------
Find
1. transactions per month for each project.
2. transactions per month for each project, which
   PRICE is <= s$1,200,000,
   PRICE is > s$1,000,000,
   FLOOR_AREA is >= 80 sqm.
3. transactions per month for each project, which
   PRICE is <= s$1,000,000,
   FLOOR_AREA is >= 80 sqm.
4. transactions per month for each project, which
   PRICE is <= s$1,000,000,
   PRICE is > s$850,000,
   FLOOR_AREA is >= 60 sqm and < 80 sqm.
5. transactions per month for each project, which
   PRICE is <= s$850,000,
   FLOOR_AREA is >= 60 sqm and < 80 sqm.

SELECT a.POSTAL_DISTRICT, a.PROJECT_NAME, a.PROPERTY_TYPE, a.TENURE_YEAR, a.SALE_YEAR, a.SALE_DATE, a.TRANSACTIONS AS TRANS_ALL,
  b.TRANSACTIONS AS TRANS_80SQM_100120W,
  c.TRANSACTIONS AS TRANS_80SQM_100W,
  d.TRANSACTIONS AS TRANS_6080SQM_85100W,
  e.TRANSACTIONS AS TRANS_6080SQM_85W
FROM
  (SELECT POSTAL_DISTRICT, PROJECT_NAME, PROPERTY_TYPE, TENURE_YEAR, SALE_YEAR, SALE_DATE, COUNT(*) AS TRANSACTIONS
   FROM URA_CONDOEC_TRANS_HIST
   GROUP BY POSTAL_DISTRICT, PROJECT_NAME, PROPERTY_TYPE, TENURE_YEAR, SALE_YEAR, SALE_DATE) a
  LEFT JOIN
  (SELECT POSTAL_DISTRICT, PROJECT_NAME, PROPERTY_TYPE, TENURE_YEAR, SALE_YEAR, SALE_DATE, COUNT(*) AS TRANSACTIONS
   FROM URA_CONDOEC_TRANS_HIST
   WHERE (PRICE <= 1200000)
         AND (PRICE > 1000000)
         AND (FLOOR_AREA >= 80)
   GROUP BY POSTAL_DISTRICT, PROJECT_NAME, PROPERTY_TYPE, TENURE_YEAR, SALE_YEAR, SALE_DATE) b
  ON ((a.POSTAL_DISTRICT = b.POSTAL_DISTRICT)
      AND (a.PROJECT_NAME = b.PROJECT_NAME)
      AND (a.PROPERTY_TYPE = b.PROPERTY_TYPE)
      AND (a.TENURE_YEAR = b.TENURE_YEAR)
      AND (a.SALE_YEAR = b.SALE_YEAR)
      AND (a.SALE_DATE = b.SALE_DATE))
  LEFT JOIN
  (SELECT POSTAL_DISTRICT, PROJECT_NAME, PROPERTY_TYPE, TENURE_YEAR, SALE_YEAR, SALE_DATE, COUNT(*) AS TRANSACTIONS
   FROM URA_CONDOEC_TRANS_HIST
   WHERE (PRICE <= 1000000)
         AND (FLOOR_AREA >= 80)
   GROUP BY POSTAL_DISTRICT, PROJECT_NAME, PROPERTY_TYPE, TENURE_YEAR, SALE_YEAR, SALE_DATE) c
  ON ((a.POSTAL_DISTRICT = c.POSTAL_DISTRICT)
      AND (a.PROJECT_NAME = c.PROJECT_NAME)
      AND (a.PROPERTY_TYPE = c.PROPERTY_TYPE)
      AND (a.TENURE_YEAR = c.TENURE_YEAR)
      AND (a.SALE_YEAR = c.SALE_YEAR)
      AND (a.SALE_DATE = c.SALE_DATE))
  LEFT JOIN
  (SELECT POSTAL_DISTRICT, PROJECT_NAME, PROPERTY_TYPE, TENURE_YEAR, SALE_YEAR, SALE_DATE, COUNT(*) AS TRANSACTIONS
   FROM URA_CONDOEC_TRANS_HIST
   WHERE (PRICE <= 1000000)
         AND (PRICE > 850000)
         AND (FLOOR_AREA >= 60)
         AND (FLOOR_AREA < 80)
   GROUP BY POSTAL_DISTRICT, PROJECT_NAME, PROPERTY_TYPE, TENURE_YEAR, SALE_YEAR, SALE_DATE) d
  ON ((a.POSTAL_DISTRICT = d.POSTAL_DISTRICT)
      AND (a.PROJECT_NAME = d.PROJECT_NAME)
      AND (a.PROPERTY_TYPE = d.PROPERTY_TYPE)
      AND (a.TENURE_YEAR = d.TENURE_YEAR)
      AND (a.SALE_YEAR = d.SALE_YEAR)
      AND (a.SALE_DATE = d.SALE_DATE))
  LEFT JOIN
  (SELECT POSTAL_DISTRICT, PROJECT_NAME, PROPERTY_TYPE, TENURE_YEAR, SALE_YEAR, SALE_DATE, COUNT(*) AS TRANSACTIONS
   FROM URA_CONDOEC_TRANS_HIST
   WHERE (PRICE <= 850000)
         AND (FLOOR_AREA >= 60)
         AND (FLOOR_AREA < 80)
   GROUP BY POSTAL_DISTRICT, PROJECT_NAME, PROPERTY_TYPE, TENURE_YEAR, SALE_YEAR, SALE_DATE) e
  ON ((a.POSTAL_DISTRICT = e.POSTAL_DISTRICT)
      AND (a.PROJECT_NAME = e.PROJECT_NAME)
      AND (a.PROPERTY_TYPE = e.PROPERTY_TYPE)
      AND (a.TENURE_YEAR = e.TENURE_YEAR)
      AND (a.SALE_YEAR = e.SALE_YEAR)
      AND (a.SALE_DATE = e.SALE_DATE))
ORDER BY a.POSTAL_DISTRICT, a.PROJECT_NAME, a.PROPERTY_TYPE, a.TENURE_YEAR, a.SALE_YEAR, a.SALE_DATE;
================================================================================
