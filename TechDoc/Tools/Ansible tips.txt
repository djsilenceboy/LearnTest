================================================================================
Ansible
================================================================================
Install for RHEL/CentOS
------------------------------------------------------------
]# yum install -y python-devel openssl-devel
]# pip install ansible
----------------------------------------
Successfully installed MarkupSafe-0.23 PyYAML-3.12 ansible-2.2.1.0 cryptography-1.7.2 jinja2-2.8.1 paramiko-2.1.1 pycrypto-2.6.1
================================================================================
Install for Cygwin, with at least the following packages installed first.
------------------------------------------------------------
python
python-jinja
python-crypto
python-openssl
python-setuptools
libffi-devel
openssh
openssl
openssl-devel
----------------------------------------
]# pip install ansible
================================================================================
Install for Windows 10
------------------------------------------------------------
Download VC compiler from: https://blogs.msdn.microsoft.com/pythonengineering/2016/04/11/unable-to-find-vcvarsall-bat/
And install.
----------------------------------------
]# pip install ansible
================================================================================
]# ansible --version
ansible 2.2.1.0
================================================================================
Generate SSH key pair.

]# mkdir -p ~/ansible
]# ssh-keygen -t rsa -N "" -C "Ansible Server" -f ~/ansible/ansible_key | tee ~/ansible/ssh-keygen.log

Copy/Add "~/ansible/ansible_key.pub" to remote host "~/.ssh/authorized_keys".
================================================================================
Ansible will search config file in order:

./ansible.cfg
~/ansible.cfg
/etc/ansible/ansible.cfg
------------------------------------------------------------
Generate config file.

]$ vi ansible.cfg
----------------------------------------
[defaults]
hostfile=endpoint_hosts
remote_user=root
private_key_file=~/ansible/ansible_key
host_key_checking=False

[ssh_connection]
# For Cygwin.
ssh_args = -o ControlMaster=no
------------------------------------------------------------
Generate host file.

]$ vi endpoint_hosts
----------------------------------------
Optional to add:

[endpoint_group]
----------------------------------------
If use cfg file with "[defaults]":

EndpointA ansible_ssh_host=192.168.0.xx ansible_ssh_port=22
----------------------------------------
If not use cfg file:

EndpointA ansible_ssh_host=192.168.0.xx ansible_ssh_port=22 ansible_ssh_user=root ansible_ssh_private_key_file=~/ansible/ansible_key
================================================================================
Test ping.
------------------------------------------------------------
If use cfg file with "[defaults]":

]$ ansible EndpointA -m ping

With debug info.

]$ ansible EndpointA -m ping -vvvv
------------------------------------------------------------
If not use cfg file:

]$ ansible EndpointA -i endpoint_hosts -m ping

With debug info.

]$ ansible EndpointA -i endpoint_hosts -m ping -vvvv
------------------------------------------------------------
Use group name to reference.

]$ ansible endpoint_group -m ping
------------------------------------------------------------
Use for all hosts.

]$ ansible all -m ping

or

]$ ansible '*' -m ping
================================================================================
Check uptime

]$ ansible EndpointA -m command -a uptime

"-m command" is default, can be omitted.

]$ ansible EndpointA -a uptime
================================================================================
"sudo" Flag

Add "-s" if want to run "sudo" command.
The client user should be set as sudoer.

]$ ansible EndpointA -s -a uptime
================================================================================
Check playbook syntax

]$ ansible-playbook --syntax-check <PlayBookName>.yml
------------------------------------------------------------
List hosts involved in playbook

]$ ansible-playbook --list-hosts <PlayBookName>.yml
------------------------------------------------------------
List tasks defined in playbook

]$ ansible-playbook --list-tasks <PlayBookName>.yml
================================================================================
Run playbook

]$ ansible-playbook <PlayBookName>.yml
------------------------------------------------------------
Sample:

]$ ansible-playbook greet.yml

With debug info.

]$ ansible-playbook greet.yml -vvvv

Overwrite defined variables in command line.
(To include space, use double quotation to include string first.
Then use single quotation to include variable definition.)

]$ ansible-playbook greet.yml -e greeting=Hello
]$ ansible-playbook greet.yml -e 'greeting="Hello Friend!"'

Overwrite defined variables by file.

]$ ansible-playbook greet.yml -e @greetvars.yml
================================================================================
Run in check mode (Dry run)

]$ ansible-playbook -C <PlayBookName>.yml
]$ ansible-playbook --check <PlayBookName>.yml
------------------------------------------------------------
Run in check mode (Dry run) and show file diff

]$ ansible-playbook -C -D <PlayBookName>.yml
]$ ansible-playbook --check --diff <PlayBookName>.yml
------------------------------------------------------------
Prompt for each task while running playbook

]$ ansible-playbook --step <PlayBookName>.yml
------------------------------------------------------------
Start at certain task

]$ ansible-playbook --start-at-task <TaskName> <PlayBookName>.yml
------------------------------------------------------------
Execute tasks with certain tags

]$ ansible-playbook -t <TagNameList> <PlayBookName>.yml
]$ ansible-playbook --tags=<TagNameList> <PlayBookName>.yml

Execute tasks without certain tags

]$ ansible-playbook --skip-tags=<TagNameList> <PlayBookName>.yml

TagNameList is separated by comma.
================================================================================
