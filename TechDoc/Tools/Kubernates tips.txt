================================================================================
Kubernates
================================================================================
Kubernetes release

https://github.com/kubernetes/kubernetes/
https://kubernetes.io/docs/getting-started-guides/windows/
================================================================================
Master VM
------------------------------------------------------------
Check service.

$ systemctl status kubelet
================================================================================
Kubectl manage cluster
------------------------------------------------------------
Get info.
(The default namespace is "default".)

$ kubectl get all
$ kubectl get deploy
$ kubectl get deploy --all-namespaces
$ kubectl get endpoints
$ kubectl get endpoints --all-namespaces
$ kubectl get nodes
$ kubectl get pods
$ kubectl get pods --show-labels
$ kubectl get pods --show-labels --selector app=fancy
$ kubectl get pods --all-namespaces
$ kubectl get pods <ResourceCategory/ResourceName>
$ kubectl get pods <ResourceCategory/ResourceName> -o yaml
$ kubectl get service
$ kubectl get service --all-namespaces
------------------------------------------------------------
Get config and service details.

$ kubectl config view

$ kubectl explain service
$ kubectl explain pods
------------------------------------------------------------
Get resource details.

$ kubectl describe <ResourceCategory/ResourceName>
$ kubectl logs <ResourceCategory/ResourceName>
------------------------------------------------------------
Run command in container.

$ kubectl exec <PodName> -it -- bash
(Default to use 1st container.)
$ kubectl exec <PodName> [-c <ContainerName>] -it -- bash
------------------------------------------------------------
Deployment.

$ kubectl run <DeployName> --image=<Image:Tag>
(Default to use namespace "Default".)
$ kubectl run <DeployName> --image=<Image:Tag> --namespace <NameSpace>
$ kubectl delete deploy <DeployName>

$ kubectl rollout history deploy <DeployName>
------------------------------------------------------------
Delete resource.

$ kubectl delete <ResourceCategory/ResourceName>
------------------------------------------------------------
Delete all Pods on a node for maintenance.

$ kubectl drain <NodeName>
$ kubectl drain <NodeName> --force
================================================================================
Create/update by YAML.

$ kubectl create -f xxx.yaml
================================================================================
Proxy

$kubectl proxy

Open: http://localhost:8001/api/v1/proxy/namespaes/default/services
================================================================================
Persistent volume / persistent volume claim
------------------------------------------------------------
$ kubectl get pv

$ kubectl describe pv/<PVName>

$ kubectl get pvc

$ kubectl describe pvc/<PVCName>
================================================================================
After enabled heapster.

$ kubectl top node
$ kubectl top pod
================================================================================
Dump cluster info/details into a folder.

$ kubectl cluster-info dump --all-namespaces --output-directory=SampleClustrState
================================================================================

================================================================================
Sample
------------------------------------------------------------
$ kubectl run myshell --image=busybox --command -- sh -c "sleep 10"
$ kubectl get pods

NAME                       READY   STATUS      RESTARTS   AGE
myshell-5d6b5787d4-9w9fz   0/1     Completed   1          45s
------------------------------------------------------------
$ kubectl run ghost --image=ghost
$ kubectl get deploy/ghost

NAME    DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE
ghost   1         1         1            1           75s                           ================================================================================
Sample
------------------------------------------------------------
$ kubectl get pv
NAME         CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS      CLAIM   STORAGECLASS   REASON   AGE
hostpathpv   1Gi        RWO            Retain           Available           manual                  6s

$ kubectl describe pv/hostpathpv
Name:            hostpathpv
Labels:          type=local
Annotations:     <none>
Finalizers:      [kubernetes.io/pv-protection]
StorageClass:    manual
Status:          Available
Claim:
Reclaim Policy:  Retain
Access Modes:    RWO
Capacity:        1Gi
Node Affinity:   <none>
Message:
Source:
    Type:          HostPath (bare host directory volume)
    Path:          /tmp/pvdata
    HostPathType:
Events:            <none>

$ kubectl get pvc
NAME    STATUS   VOLUME       CAPACITY   ACCESS MODES   STORAGECLASS   AGE
mypvc   Bound    hostpathpv   1Gi        RWO            manual         18s

$ kubectl get pv
NAME         CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS   CLAIM           STORAGECLASS   REASON   AGE
hostpathpv   1Gi        RWO            Retain           Bound    default/mypvc   manual                  8m44s

$ kubectl describe pvc/mypvc
Name:          mypvc
Namespace:     default
StorageClass:  manual
Status:        Bound
Volume:        hostpathpv
Labels:        <none>
Annotations:   pv.kubernetes.io/bind-completed: yes
               pv.kubernetes.io/bound-by-controller: yes
Finalizers:    [kubernetes.io/pvc-protection]
Capacity:      1Gi
Access Modes:  RWO
Events:        <none>
Mounted By:    <none>

$ kubectl describe pv/hostpathpv
Name:            hostpathpv
Labels:          type=local
Annotations:     pv.kubernetes.io/bound-by-controller: yes
Finalizers:      [kubernetes.io/pv-protection]
StorageClass:    manual
Status:          Bound
Claim:           default/mypvc
Reclaim Policy:  Retain
Access Modes:    RWO
Capacity:        1Gi
Node Affinity:   <none>
Message:
Source:
    Type:          HostPath (bare host directory volume)
    Path:          /tmp/pvdata
    HostPathType:
Events:            <none>
================================================================================
