================================================================================
https://docs.mongodb.com/master/tutorial/install-mongodb-on-red-hat/
================================================================================
Install DB for RHEL/CentOS.
------------------------------------------------------------
Add yum repo.

]# vi /etc/yum.repos.d/mongodb-org-3.4.repo
----------------------------------------
[mongodb-org-3.4]
name=MongoDB Repository
baseurl=https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/3.4/x86_64/
gpgcheck=1
enabled=1
gpgkey=https://www.mongodb.org/static/pgp/server-3.4.asc
------------------------------------------------------------
For CentOS, change to this line:

baseurl=https://repo.mongodb.org/yum/redhat/7/mongodb-org/3.4/x86_64/
------------------------------------------------------------
Install by yum.

]# yum install -y mongodb-org
------------------------------------------------------------
Uninstall.

]# yum erase $(rpm -qa | grep mongodb-org)

Delete databases and log files.

]# rm -r /var/log/mongodb
]# rm -r /var/lib/mongo
================================================================================
Service
------------------------------------------------------------
]# systemctl enable mongod
]# systemctl status mongod
]# systemctl start mongod
]# systemctl stop mongod
------------------------------------------------------------
Config

]# vi /etc/mongod.conf
----------------------------------------
Comment line to enable remote access.

#  bindIp: 127.0.0.1

Note that, it requires to restart service.
------------------------------------------------------------
Log

]# tail -F -n100 /var/log/mongodb/mongod.log
================================================================================
Create user in admin db.
------------------------------------------------------------
From console.

]# mongo

Default is connect to test@localhost.
----------------------------------------
use admin
db.createUser(
  {
    user: "root",
    pwd: "Password",
    roles: [{role: "root", db: "admin"}]
  }
)
db.createUser(
  {
    user: "admin",
    pwd: "Password",
    roles: [{role: "userAdminAnyDatabase", db: "admin"}]
  }
)
------------------------------------------------------------
From .js.
----------------------------------------
mongo = new Mongo("localhost")
db = mongo.getDB("admin")
db.createUser(
  {
    user: "root",
    pwd: "Password",
    roles: [{role: "root", db: "admin"}]
  }
)
db.createUser(
  {
    user: "admin",
    pwd: "Password",
    roles: [{role: "userAdminAnyDatabase", db: "admin"}]
  }
)
================================================================================
Create user in test db.
------------------------------------------------------------
From console.

]# mongo

Default is connect to test@localhost.
----------------------------------------
use test
db.createUser(
  {
    user: "tester",
    pwd: "Password",
    roles: [{role: "dbOwner", db: "test"}]
 }
)
------------------------------------------------------------
From .js.
----------------------------------------
mongo = new Mongo("localhost")
db = mongo.getDB("test")
db.createUser(
  {
    user: "tester",
    pwd: "Password",
    roles: [{role: "dbOwner", db: "test"}]
 }
)
================================================================================
Login admin db.
----------------------------------------
>
use admin
db.auth("admin", "Password")
------------------------------------------------------------
Login and start with admin db from command line.
----------------------------------------
]# mongo -u "root" -p "Password" admin
]# mongo -u "admin" -p "Password" admin
------------------------------------------------------------
Login admin db but start with default test db from command line.
----------------------------------------
]# mongo -u "root" -p "Password" --authenticationDatabase admin
]# mongo -u "admin" -p "Password" --authenticationDatabase admin
================================================================================
Login test db.
----------------------------------------
>
use admin
db.auth("tester", "Password")
------------------------------------------------------------
Login and start with test db from command line.
----------------------------------------
]# mongo -u "test" -p "Password" test
================================================================================
Show DB list.
It must use root user.

> show dbs
------------------------------------------------------------
Show users.

> show users
------------------------------------------------------------
Show current DB.

> db
or
> db.getName()
------------------------------------------------------------
Show last error.

> db.getLastError()
================================================================================
